/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : XBARA.h
**     Project     : TPPFC_MC56F82748_V1.0
**     Processor   : MC56F82748VLH
**     Component   : Init_XBAR
**     Version     : Component 01.000, Driver 01.00, CPU db: 3.50.001
**     Compiler    : CodeWarrior DSP C Compiler
**     Date/Time   : 2022-01-24, 16:51, # CodeGen: 0
**     Abstract    :
**          This file implements the XBAR (XBARA) module initialization
**          according to the Peripheral Initialization settings, and
**          defines interrupt service routines prototypes.
**     Settings    :
**          Component name                                 : XBARA
**          Device                                         : XBARA
**          Settings                                       : 
**            Output DMA_REQ0                              : In0
**            Output DMA_REQ1                              : In0
**            Output DMA_REQ2                              : In0
**            Output DMA_REQ3                              : In0
**            Output XB_OUT4                               : In22
**            Output XB_OUT5                               : In0
**            Output XB_OUT6                               : AND_OR_INVERT_0
**            Output XB_OUT7                               : AND_OR_INVERT_1
**            Output XB_OUT8                               : In0
**            Output XB_OUT9                               : In13
**            Output XB_OUT10                              : In0
**            Output XB_OUT11                              : In0
**            Output ADCA_TRIG                             : In22
**            Output ADCB_TRIG                             : In0
**            Output DACB_12B_SYNC                         : In0
**            Output DACA_12B_SYNC                         : In0
**            Output CMPA                                  : In0
**            Output CMPB                                  : In0
**            Output CMPC                                  : In0
**            Output CMPD                                  : In0
**            Output PWM0_EXTA                             : In0
**            Output PWM1_EXTA                             : In0
**            Output PWM2_EXTA                             : In0
**            Output PWM3_EXTA                             : In0
**            Output PWM0_EXT_SYNC                         : In0
**            Output PWM1_EXT_SYNC                         : In0
**            Output PWM2_EXT_SYNC                         : In0
**            Output PWM3_EXT_SYNC                         : In0
**            Output PWM_EXT_CLK                           : In0
**            Output PWM_FAULT0                            : CMPB_OUT
**            Output PWM_FAULT1                            : CMPC_OUT
**            Output PWM_FAULT2                            : CMPD_OUT
**            Output PWM_FAULT3                            : In0
**            Output PWM_FORCE                             : In0
**            Output TA0_IN                                : In0
**            Output TA1_IN                                : In0
**            Output TA2_IN                                : In0
**            Output TA3_IN                                : In0
**            Output SCI0_RXD                              : In0
**            Output SCI1_RXD                              : In0
**            Output EWM_IN                                : In0
**            Output DMA_REQ0 interrupt assert             : Neither
**            Output DMA_REQ1 interrupt assert             : Neither
**            Output DMA_REQ2 interrupt assert             : Neither
**            Output DMA_REQ3 interrupt assert             : Neither
**          Interrupts                                     : 
**            Output interrupt                             : 
**              Interrupt                                  : INT_XBARA
**              Interrupt priority                         : disabled
**              ISR Name                                   : 
**              Output 0 interrupt enable                  : no
**              Output 0 DMA enable                        : no
**              Output 1 interrupt enable                  : no
**              Output 1 DMA enable                        : no
**              Output 2 interrupt enable                  : no
**              Output 2 DMA enable                        : no
**              Output 3 interrupt enable                  : no
**              Output 3 DMA enable                        : no
**          Initialization                                 : 
**            Call Init method                             : yes
**            Utilize after reset values                   : default
**     Contents    :
**         Init - void XBARA_Init(void);
**
**     Copyright : 1997 - 2014 Freescale Semiconductor, Inc. 
**     All Rights Reserved.
**     
**     Redistribution and use in source and binary forms, with or without modification,
**     are permitted provided that the following conditions are met:
**     
**     o Redistributions of source code must retain the above copyright notice, this list
**       of conditions and the following disclaimer.
**     
**     o Redistributions in binary form must reproduce the above copyright notice, this
**       list of conditions and the following disclaimer in the documentation and/or
**       other materials provided with the distribution.
**     
**     o Neither the name of Freescale Semiconductor, Inc. nor the names of its
**       contributors may be used to endorse or promote products derived from this
**       software without specific prior written permission.
**     
**     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
**     ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
**     WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
**     DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
**     ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
**     LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
**     ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
**     (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
**     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
**     
**     http: www.freescale.com
**     mail: support@freescale.com
** ###################################################################*/
/*!
** @file XBARA.h
** @version 01.00
** @brief
**          This file implements the XBAR (XBARA) module initialization
**          according to the Peripheral Initialization settings, and
**          defines interrupt service routines prototypes.
*/         
/*!
**  @addtogroup XBARA_module XBARA module documentation
**  @{
*/         

#ifndef XBARA_H_
#define XBARA_H_

/* MODULE XBARA. */

#include "XBARA_Init.h"

/* Initialization method user name */
#define XBARA_Init XBARA_Init
/* PDD macros peripheral base address parameter */
#define XBARA_DEVICE XBARA_BASE_PTR

/* END XBARA. */
#endif /* #ifndef __XBARA_H_ */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.3 [05.09]
**     for the Freescale 56800 series of microcontrollers.
**
** ###################################################################
*/
